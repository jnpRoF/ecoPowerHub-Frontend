{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalCompanyValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalShares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sharePrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        }
      ],
      "name": "ServicePaymentProcessed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "percentage",
          "type": "uint256"
        }
      ],
      "name": "newInvestor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "addressTo",
          "type": "address"
        }
      ],
      "name": "withdrawSuccess",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "constantShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invest",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "investorAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "investors",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "investedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sharePercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payForService",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sharePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCompanyValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7b20abf3fced3424bbcab0477708db467e85dd505a1d6b6ada9c3964a81b5d29",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "950178",
    "logsBloom": "0x
    "blockHash": "0x485f9eec20ac9967f69af6eaa4b74ed8925d818c44c92e5f5acde3e3cb85a7b5",
    "transactionHash": "0x7b20abf3fced3424bbcab0477708db467e85dd505a1d6b6ada9c3964a81b5d29",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "950178",
    "status": 1,
    "byzantium": true
  },
  "args": [
    500,
    100,
    1
  ],
  "numDeployments": 1,
  "solcInputHash": "61cf6f76eccc859544d8f0a93beb631b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalCompanyValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sharePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"}],\"name\":\"ServicePaymentProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"newInvestor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addressTo\",\"type\":\"address\"}],\"name\":\"withdrawSuccess\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"constantShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"investorAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investors\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"investedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePercentage\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payForService\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCompanyValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"olaoye salem\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ServiceMarketplace\",\"version\":1},\"userdoc\":{\"events\":{\"newInvestor(address,uint256)\":{\"notice\":\"EVENTS \"}},\"kind\":\"user\",\"methods\":{\"payForService()\":{\"notice\":\"This function takes in the serviceAmount and allow users that have recived service from the comapnyto pay the company and the investors.\"}},\"notice\":\"This smart contract is a  factory that will always be deployed by companies. This contract allow users to invest in companies and participate in the revenue sharing. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ServiceMarketplace.sol\":\"ServiceMarketplace\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ServiceMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/// @title ServiceMarketplace\\n/// @author olaoye salem\\n/// @notice This smart contract is a  factory that will always be deployed by companies. \\n/// @notice This contract allow users to invest in companies and participate in the revenue sharing. \\n\\n\\ncontract ServiceMarketplace {\\n    address public owner;\\n    uint256 public totalCompanyValue;  // Total value of the company\\n    uint256 public totalShares;    \\n    uint256 public sharePrice;// Price per share in toro\\n    uint256 public constantShare; \\n\\n    struct Investor {\\n        uint256 investedAmount;\\n        uint256 sharePercentage;\\n    }\\n\\n    /** EVENTS */\\n    event newInvestor( address indexed investor,  uint256 indexed percentage);\\n    event ServicePaymentProcessed( uint256 indexed amountPaid);\\n    event withdrawSuccess( uint256 indexed amount , address indexed addressTo );\\n\\n    \\n\\n    mapping(address => Investor) public investors; // Map of investors and their investments\\n    address[] public investorAddresses;  // List of investor addresses\\n\\n    constructor(uint256 _totalCompanyValue, uint256 _totalShares, uint256 _sharePrice ) {\\n        owner = msg.sender;\\n        totalCompanyValue = _totalCompanyValue;\\n        totalShares = _totalShares;\\n        constantShare = _totalShares;\\n        sharePrice = _sharePrice;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can call this function\\\");\\n        _;\\n    }\\n\\n    function invest() public payable {\\n        require(msg.value > 0, \\\"Investment amount must be greater than 0\\\");\\n        uint256  percentage= (((msg.value)/(sharePrice * constantShare))*100)/1e18;\\n        require(percentage > 0 && percentage <= 100, \\\"Percentage must be between 1 and 100\\\");\\n\\n\\n        uint256 sharesToBuy = (constantShare * percentage)/100 ;\\n        require(sharesToBuy <= totalShares, \\\"Not enough shares available\\\");\\n\\n        investors[msg.sender].investedAmount += msg.value;\\n        investors[msg.sender].sharePercentage += percentage;\\n\\n        totalShares -= sharesToBuy;\\n\\n        // Add the investor address to the list\\n        investorAddresses.push(msg.sender);\\n        emit newInvestor(msg.sender, percentage);\\n\\n        \\n    }\\n\\n\\n        ///@notice This function takes in the serviceAmount and allow users that have recived service from the comapny\\n        /// @notice to pay the company and the investors.\\n    function payForService() public payable{ // anybody should be able to call this \\n        // Calculate payments to investors and distribute\\n       \\n        for (uint256 i = 0; i < investorAddresses.length; i++) {\\n            address investor = investorAddresses[i];\\n            uint256 share = ((msg.value/1e18) * investors[investor].sharePercentage) / 100;\\n            uint256 payout = (investors[investor].investedAmount * share) / totalCompanyValue;\\n            \\n            payable(investor).transfer(payout);\\n\\n            emit ServicePaymentProcessed(msg.value);\\n        }\\n        \\n    }\\n\\n    function withdraw( uint _amount, address _address) public onlyOwner {\\n        payable(_address).transfer(_amount);\\n\\n        \\n        emit  withdrawSuccess(_amount, _address);\\n    }\\n\\n    function checkBalance() public  view returns (uint256){\\n        return  address(this).balance;\\n\\n    }\\n\\n    \\n}\",\"keccak256\":\"0x18350f280b1c3bc1f73864848087eff76deecdd7691241b890e59fb2da79e1c5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f5c380380610f5c833981810160405281019061003291906100ab565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555081600281905550816004819055508060038190555050505061011b565b6000815190506100a581610104565b92915050565b6000806000606084860312156100c057600080fd5b60006100ce86828701610096565b93505060206100df86828701610096565b92505060406100f086828701610096565b9150509250925092565b6000819050919050565b61010d816100fa565b811461011857600080fd5b50565b610e328061012a6000396000f3fe60806040526004361061009b5760003560e01c80638da5cb5b116100645780638da5cb5b1461018857806395a25efa146101b3578063a22c6f41146101f0578063c71daccb146101fa578063dca1e01714610225578063e8b5e51f146102505761009b565b8062f714ce146100a057806301d16a39146100c95780633a98ef39146100f45780636f7bc9be1461011f578063872697291461015d575b600080fd5b3480156100ac57600080fd5b506100c760048036038101906100c2919061091a565b61025a565b005b3480156100d557600080fd5b506100de610377565b6040516100eb9190610b81565b60405180910390f35b34801561010057600080fd5b5061010961037d565b6040516101169190610b81565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906108c8565b610383565b604051610154929190610b9c565b60405180910390f35b34801561016957600080fd5b506101726103a7565b60405161017f9190610b81565b60405180910390f35b34801561019457600080fd5b5061019d6103ad565b6040516101aa9190610ae6565b60405180910390f35b3480156101bf57600080fd5b506101da60048036038101906101d591906108f1565b6103d1565b6040516101e79190610ae6565b60405180910390f35b6101f8610410565b005b34801561020657600080fd5b5061020f6105e6565b60405161021c9190610b81565b60405180910390f35b34801561023157600080fd5b5061023a6105ee565b6040516102479190610b81565b60405180910390f35b6102586105f4565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610b01565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561032e573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff16827fc9ad0bc13ed05225e55165c2b2b896ff5e874460b2fe15e6bd4b2540c83a9d3660405160405180910390a35050565b60015481565b60025481565b60056020528060005260406000206000915090508060000154908060010154905082565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600681815481106103e157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b6006805490508110156105e35760006006828154811061045c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006064600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154670de0b6b3a7640000346104e49190610c2c565b6104ee9190610c5d565b6104f89190610c2c565b9050600060015482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461054d9190610c5d565b6105579190610c2c565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561059f573d6000803e3d6000fd5b50347f993e6f9cd5fbe4781cd6563a04a7895f7208e5d7969a6ea8fb62b007f6a11fa060405160405180910390a250505080806105db90610d27565b915050610413565b50565b600047905090565b60045481565b60003411610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90610b21565b60405180910390fd5b6000670de0b6b3a764000060646004546003546106549190610c5d565b3461065f9190610c2c565b6106699190610c5d565b6106739190610c2c565b9050600081118015610686575060648111155b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610b41565b60405180910390fd5b60006064826004546106d79190610c5d565b6106e19190610c2c565b9050600254811115610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90610b61565b60405180910390fd5b34600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461077a9190610bd6565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546107d39190610bd6565b9250508190555080600260008282546107ec9190610cb7565b925050819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f7e215c26271352f4ad032ecbcf9fdd4bf094711763efb12cddbb234905037edc60405160405180910390a35050565b6000813590506108ad81610dce565b92915050565b6000813590506108c281610de5565b92915050565b6000602082840312156108da57600080fd5b60006108e88482850161089e565b91505092915050565b60006020828403121561090357600080fd5b6000610911848285016108b3565b91505092915050565b6000806040838503121561092d57600080fd5b600061093b858286016108b3565b925050602061094c8582860161089e565b9150509250929050565b61095f81610ceb565b82525050565b6000610972602583610bc5565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109d8602883610bc5565b91507f496e766573746d656e7420616d6f756e74206d7573742062652067726561746560008301527f72207468616e20300000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a3e602483610bc5565b91507f50657263656e74616765206d757374206265206265747765656e203120616e6460008301527f20313030000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610aa4601b83610bc5565b91507f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000006000830152602082019050919050565b610ae081610d1d565b82525050565b6000602082019050610afb6000830184610956565b92915050565b60006020820190508181036000830152610b1a81610965565b9050919050565b60006020820190508181036000830152610b3a816109cb565b9050919050565b60006020820190508181036000830152610b5a81610a31565b9050919050565b60006020820190508181036000830152610b7a81610a97565b9050919050565b6000602082019050610b966000830184610ad7565b92915050565b6000604082019050610bb16000830185610ad7565b610bbe6020830184610ad7565b9392505050565b600082825260208201905092915050565b6000610be182610d1d565b9150610bec83610d1d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2157610c20610d70565b5b828201905092915050565b6000610c3782610d1d565b9150610c4283610d1d565b925082610c5257610c51610d9f565b5b828204905092915050565b6000610c6882610d1d565b9150610c7383610d1d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cac57610cab610d70565b5b828202905092915050565b6000610cc282610d1d565b9150610ccd83610d1d565b925082821015610ce057610cdf610d70565b5b828203905092915050565b6000610cf682610cfd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d3282610d1d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6557610d64610d70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610dd781610ceb565b8114610de257600080fd5b50565b610dee81610d1d565b8114610df957600080fd5b5056fea2646970667358221220a700e72faef28d2e44c6909b02176045b46c5c0a3c3583f13de77eebd62cd93864736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061009b5760003560e01c80638da5cb5b116100645780638da5cb5b1461018857806395a25efa146101b3578063a22c6f41146101f0578063c71daccb146101fa578063dca1e01714610225578063e8b5e51f146102505761009b565b8062f714ce146100a057806301d16a39146100c95780633a98ef39146100f45780636f7bc9be1461011f578063872697291461015d575b600080fd5b3480156100ac57600080fd5b506100c760048036038101906100c2919061091a565b61025a565b005b3480156100d557600080fd5b506100de610377565b6040516100eb9190610b81565b60405180910390f35b34801561010057600080fd5b5061010961037d565b6040516101169190610b81565b60405180910390f35b34801561012b57600080fd5b50610146600480360381019061014191906108c8565b610383565b604051610154929190610b9c565b60405180910390f35b34801561016957600080fd5b506101726103a7565b60405161017f9190610b81565b60405180910390f35b34801561019457600080fd5b5061019d6103ad565b6040516101aa9190610ae6565b60405180910390f35b3480156101bf57600080fd5b506101da60048036038101906101d591906108f1565b6103d1565b6040516101e79190610ae6565b60405180910390f35b6101f8610410565b005b34801561020657600080fd5b5061020f6105e6565b60405161021c9190610b81565b60405180910390f35b34801561023157600080fd5b5061023a6105ee565b6040516102479190610b81565b60405180910390f35b6102586105f4565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102df90610b01565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561032e573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff16827fc9ad0bc13ed05225e55165c2b2b896ff5e874460b2fe15e6bd4b2540c83a9d3660405160405180910390a35050565b60015481565b60025481565b60056020528060005260406000206000915090508060000154908060010154905082565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600681815481106103e157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b6006805490508110156105e35760006006828154811061045c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006064600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154670de0b6b3a7640000346104e49190610c2c565b6104ee9190610c5d565b6104f89190610c2c565b9050600060015482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461054d9190610c5d565b6105579190610c2c565b90508273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561059f573d6000803e3d6000fd5b50347f993e6f9cd5fbe4781cd6563a04a7895f7208e5d7969a6ea8fb62b007f6a11fa060405160405180910390a250505080806105db90610d27565b915050610413565b50565b600047905090565b60045481565b60003411610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e90610b21565b60405180910390fd5b6000670de0b6b3a764000060646004546003546106549190610c5d565b3461065f9190610c2c565b6106699190610c5d565b6106739190610c2c565b9050600081118015610686575060648111155b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90610b41565b60405180910390fd5b60006064826004546106d79190610c5d565b6106e19190610c2c565b9050600254811115610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90610b61565b60405180910390fd5b34600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461077a9190610bd6565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546107d39190610bd6565b9250508190555080600260008282546107ec9190610cb7565b925050819055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550813373ffffffffffffffffffffffffffffffffffffffff167f7e215c26271352f4ad032ecbcf9fdd4bf094711763efb12cddbb234905037edc60405160405180910390a35050565b6000813590506108ad81610dce565b92915050565b6000813590506108c281610de5565b92915050565b6000602082840312156108da57600080fd5b60006108e88482850161089e565b91505092915050565b60006020828403121561090357600080fd5b6000610911848285016108b3565b91505092915050565b6000806040838503121561092d57600080fd5b600061093b858286016108b3565b925050602061094c8582860161089e565b9150509250929050565b61095f81610ceb565b82525050565b6000610972602583610bc5565b91507f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60008301527f6374696f6e0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109d8602883610bc5565b91507f496e766573746d656e7420616d6f756e74206d7573742062652067726561746560008301527f72207468616e20300000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610a3e602483610bc5565b91507f50657263656e74616765206d757374206265206265747765656e203120616e6460008301527f20313030000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610aa4601b83610bc5565b91507f4e6f7420656e6f7567682073686172657320617661696c61626c6500000000006000830152602082019050919050565b610ae081610d1d565b82525050565b6000602082019050610afb6000830184610956565b92915050565b60006020820190508181036000830152610b1a81610965565b9050919050565b60006020820190508181036000830152610b3a816109cb565b9050919050565b60006020820190508181036000830152610b5a81610a31565b9050919050565b60006020820190508181036000830152610b7a81610a97565b9050919050565b6000602082019050610b966000830184610ad7565b92915050565b6000604082019050610bb16000830185610ad7565b610bbe6020830184610ad7565b9392505050565b600082825260208201905092915050565b6000610be182610d1d565b9150610bec83610d1d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2157610c20610d70565b5b828201905092915050565b6000610c3782610d1d565b9150610c4283610d1d565b925082610c5257610c51610d9f565b5b828204905092915050565b6000610c6882610d1d565b9150610c7383610d1d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cac57610cab610d70565b5b828202905092915050565b6000610cc282610d1d565b9150610ccd83610d1d565b925082821015610ce057610cdf610d70565b5b828203905092915050565b6000610cf682610cfd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d3282610d1d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6557610d64610d70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610dd781610ceb565b8114610de257600080fd5b50565b610dee81610d1d565b8114610df957600080fd5b5056fea2646970667358221220a700e72faef28d2e44c6909b02176045b46c5c0a3c3583f13de77eebd62cd93864736f6c63430008000033",
  "devdoc": {
    "author": "olaoye salem",
    "kind": "dev",
    "methods": {},
    "title": "ServiceMarketplace",
    "version": 1
  },
  "userdoc": {
    "events": {
      "newInvestor(address,uint256)": {
        "notice": "EVENTS "
      }
    },
    "kind": "user",
    "methods": {
      "payForService()": {
        "notice": "This function takes in the serviceAmount and allow users that have recived service from the comapnyto pay the company and the investors."
      }
    },
    "notice": "This smart contract is a  factory that will always be deployed by companies. This contract allow users to invest in companies and participate in the revenue sharing. ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "totalCompanyValue",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "totalShares",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "sharePrice",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 12,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "constantShare",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "investors",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(Investor)17_storage)"
      },
      {
        "astId": 42,
        "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
        "label": "investorAddresses",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(Investor)17_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ServiceMarketplace.Investor)",
        "numberOfBytes": "32",
        "value": "t_struct(Investor)17_storage"
      },
      "t_struct(Investor)17_storage": {
        "encoding": "inplace",
        "label": "struct ServiceMarketplace.Investor",
        "members": [
          {
            "astId": 14,
            "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
            "label": "investedAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/ServiceMarketplace.sol:ServiceMarketplace",
            "label": "sharePercentage",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}